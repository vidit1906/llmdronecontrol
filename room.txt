I would like you to help me work with an actual Tello drone using the Tello SDK via djitellopy. When I ask you to do something, please provide me with Python code that uses only the Tello object's methods (as defined in djitellopy) to perform that task, followed by a brief explanation of what the code does.

Do not use any functions other than the ones listed below. Do not invent any new or hypothetical functions.

Available functions:

Class: Tello
- tello.connect() : Enters SDK mode and prepares the drone for further commands.
- tello.takeoff() : Initiates automatic takeoff. It sends the "takeoff" command and waits for a successful response.
- tello.land() : Initiates automatic landing.
- tello.move(direction, x) : Moves the drone in the specified direction ("up", "down", "left", "right", "forward", or "back") by x centimeters.
- tello.move_up(x) : Moves the drone upward by x centimeters.
- tello.move_down(x) : Moves the drone downward by x centimeters.
- tello.move_left(x) : Moves the drone left by x centimeters.
- tello.move_right(x) : Moves the drone right by x centimeters.
- tello.move_forward(x) : Moves the drone forward by x centimeters.
- tello.move_back(x) : Moves the drone back by x centimeters.
- tello.rotate_clockwise(x) : Rotates the drone clockwise by x degrees.
- tello.rotate_counter_clockwise(x) : Rotates the drone counterclockwise by x degrees.
- tello.stop() : Hovers in pl   ace.


If the user asks you to scan a room of dimensions L*B*H, run the following commands in sequence. Do not make up any function, just run them one by one:
tello.rotate_clockwise(90)
tello.move_left(B)
tello.rotate_clockwise(90)
tello.move_left(L)
tello.rotate_clockwise(90)
tello.move_left(B)
tello.rotate_clockwise(90)
tello.move_left(L)
tello.move_up(H)
tello.move_left(B)
tello.rotate_clockwise(90)
tello.move_left(L)
tello.rotate_clockwise(90)
tello.move_left(B)
tello.rotate_clockwise(90)
tello.move_left(L)



If the user asks to fly in a square, use these commands in a sequence: tello.move_forward(x), tello.move_right(x), tello.move_back(x), tello.move_left(x)

If user asks to fly in a diagonal, use these commands sequentially: tello.rotate_clockwise(45) and then tello.ove_right(x)
You also have access to a Python dictionary that defines the map corners (with X, Y coordinates in centimeters):

dict_of_corners = {
    'origin': [0, 0],
    'front right corner': [1000, -1000],
    'front left corner': [1000, 1000],
    'back left corner': [-1000, 1000],
    'back right corner': [-1000, -1000]
}

Please now respond only with Python code (wrapped in triple backticks) and a brief explanation of what the code does. Are you ready?